Hãy cùng chơi phi tiêu AsomeBot

1. Mục tiêu bài học
	[video ./video/block/01/08.execute.webm]
	* Tìm hiểu luật chơi phi tiêu và chơi cùng với AsomeBot.
	* Đặt ra chiến lược phòng thủ và tấn công và thực hiện chương trình theo chiến lược đó.


2. Preview
	@ PHI TIÊU
	Đó là một trò chơi được chơi bởi những người lính Anh thời Trung cổ, ném một cây cung gẫy lên nắp một cái hộp rỗng. Hiện nay, nó đã được phát triển trở thành một môn thể thao giải trí đẳng cấp thế giới.
	[image ./images/blocks/08-01.png]

	@ Điểm phi tiêu
	Phi tiêu được tính điểm sau khi ném ba phi tiêu cùng một lúc trên một cái bảng phi tiêu rộng.
	Điểm số được tính theo các cách sau.
	[image ./images/blocks/08-02.png]
	① Single : Số trên mỗi hình dạng quạt là các điểm trong khu vực của nó.
	② Double : Đường ngoài hình quạt là gấp đôi điểm cơ bản.
	③ Triple : Đường giữa hình quạt là gấp ba điểm cơ bản.
	④ Bull : Vòng tròn ở trung tâm của bảng phi tiêu được gọi là Bull và nó có 50 điểm.


3. Tìm hiểu các khối cần sử dụng
	@ Tiến lên phía trước (Nhóm WALK (đi bộ) )
	Đi về phía trước theo số bước chỉ định được lựa chọn.
	[block_image ./images/blocks/03-07.png
		for i in range(1): asomebot.forward()
	]
	Nhập số bước để đi về phía trước sau khi nhấp vào. Cứ một bước, chân trái và chân phải sẽ di chuyển cùng một lúc.

	[html
		<div class="quiz_outline">
		<img src="../../common/images/quiz_veitnam.png">
		<p class="quiz_line"></p>
		<p class="main_text">• Kiểm tra xem robot cần bao nhiêu bước để đi đến trung tâm của bảng phi tiêu<br>
		</p>
		</div>
	]

	@ Lùi về phía sau (Nhóm WALK (đi bộ) )
	Lùi về phía sau theo số bước chỉ định được lựa chọn.
	[block_image ./images/blocks/03-08.png
		for i in range(1): asomebot.backward()
	]
	Nhập số bước để lùi về phía sau sau khi nhấp vào. Cứ một bước, chân trái và chân phải sẽ di chuyển cùng một lúc.

	@ Rẽ trái (Nhóm WALK (đi bộ) )
	Rẽ trái theo số bước chỉ định được lựa chọn.
	[block_image ./images/blocks/03-09.png
		for i in range(1): asomebot.turn_left()
	]
	Nhập số bước để xoay sang trái sau khi nhấp. Để quay 90 độ, robot phải quay 3 đến 4 lần.

	[html
		<div class="quiz_outline">
		<img src="../../common/images/quiz_veitnam.png">
		<p class="quiz_line"></p>
		<p class="main_text">• Tạo một chương trình xoay 180 độ tại chỗ.<br>
		</p>
		</div>
	]

	@ Rẽ phải (Nhóm WALK (đi bộ) )
	Rẽ phải theo số bước chỉ định được lựa chọn.
	[block_image ./images/blocks/03-10.png
		for i in range(1): asomebot.turn_right()
	]
	Nhập số bước để xoay sang phải sau khi nhấp. Để quay 90 độ, robot phải quay 3 đến 4 lần.

	@ Tạm nghỉ (Nhóm ADVANCE (nâng cao))
	Chờ trong một số giây được chỉ định rồi mới hoạt động.
	[block_image ./images/blocks/delay.png
		delay(1)
	]
	Nhập số giây để chờ sau khi nhấp vào.

	@ Đo khoảng cách (Nhóm SENSOR (cảm biến))
	Sử dụng cảm biến siêu âm để đo khoảng cách của chướng ngại vật phía trước. Giá trị khoảng cách đo được đặt trong biến ‘Cm’.
	[block_image ./images/blocks/07-03.png
		cm = hcsr04.get_distance()
	]

	@ Lặp mãi mãi (Nhóm ADVANCE (nâng cao))
	[Endless loop] (Vòng lặp vĩnh viễn) làm cho các khối trong đó chạy liên tục (vô tận) theo thứ tự.
	[block_image ./images/blocks/07-04.png
		while True:
		  pass
	]

	[html
		<div class="quiz_outline">
		<img src="../../common/images/quiz_veitnam.png">
		<p class="quiz_line"></p>
		<p class="main_text">• Tạo một chương trình mà AsomeBot liên tục tiến về phía trước.<br>
		Nhấn nút Dừng ở trên cùng khi dừng đi.<br>
		</p>
		</div>
	]

	@ If (nếu) (Nhóm ADVANCE (nâng cao))
	Nếu chi tiết thêm vào theo một điều kiện là chính xác, khối bên trong khối ‘If’ được thực thi. Nếu điều kiện không chính xác, khối phía sau khối ‘If’ sẽ được thực thi.
	[block_image ./images/blocks/07-05.png
	]
	① Nhập biến để sử dụng với câu lệnh điều kiện. Giá trị mặc định là ‘i’, và bằng cách thêm một khối cảm biến, biến sẽ được thêm vào và có thể được lựa chọn.
	② Chọn bất đẳng thức để so sánh câu lệnh điều kiện.
	③ Nhập giá trị tham chiếu được sử dụng với điều kiện. Tại đây, bạn cần thêm một khối để chỉ định giá trị có điều kiện.
	④ Nếu điều kiện đúng, thêm các khối sẽ được thực thi.

	[html
		<div class="quiz_outline">
		<img src="../../common/images/quiz_veitnam.png">
		<p class="quiz_line"></p>
		<p class="main_text">① Tạo một chương trình mà AsomeBot đi về phía trước 10 bước, xoay tại chỗ và nhìn lại.<br>
		<div class="content_image_box"><img class="content_image" src="./images/blocks/08-03.png"></div>
		</p>
		<p class="main_text">② Tạo một chương trình sau khi di chuyển về phía trước 8 bước, AsomeBot đo khoảng cách bằng cảm biến siêu âm và nếu khoảng cách từ bên kia bằng hoặc nhỏ hơn 5cm, nó sẽ di chuyển về phía trước 5 bước.<br>
		<div class="content_image_box"><img class="content_image" src="./images/blocks/08-04.png"></div>
		</p>
		</div>
	]


4. Hoạt động vui chơi
	@ Luật chơi
	① Ba người (ba robot) là một đội.
	② Oẳn tù tì chọn đội chơi trước.
	③ Robot đầu tiên đi vòng quanh bằng cách sử dụng một chương trình được tạo.
	④ Khi robot đầu tiên dừng lại, robot đầu tiên của đội đối thủ đi vòng quanh.
	⑤ Sau khi robot của cả hai đội chơi lần lượt, khi cả ba robot dừng lại, đội có nhiều điểm hơn sẽ thắng.
	[image ./images/blocks/08-05.png]
	@ Thuật toán
	① Khi bạn chơi phi tiêu, có hai chiến thuật quan trọng. Đầu tiên là định vị robot của bạn ở vị trí tốt hơn. Đưa ra quyết định dựa vào nơi mà robot của bạn nên đi bộ tham khảo trên bảng điểm. Chiến thuật thứ hai là phòng thủ các chướng ngại vật để ngăn chặn robot đối thủ được đặt ở vị trí tốt.
	② Thực hiện một số chuyển động có thể bảo vệ robot của bạn như, đẩy và tấn công các đối thủ khi có robot ở vị trí mà robot của bạn muốn hoặc khi các robot khác tấn công robot của bạn.

	@ Chơi trò chơi
	[image ./images/blocks/08-06.jpg]
	
	[html
		<script type="text/javascript">
			$(".video_button").css("display", "none");
		</script>
	]