Thoát khỏi mê cung

1. Mục tiêu học tập
	[video ./video/block/01/14.execute.webm]
	* Hiểu thuật toán để thoát khỏi mê cung.
	* Điều khiển chuyển động của Asomebot trong nhiều tình huống khác nhau.
	* Hiểu về đặc điểm của từng phần mê cung và phát triển những lối thoát khác nhau.


2. Preview
	@ Thoát khỏi mê cung
	Sử dụng cảm biến siêu âm của AsomeBot, bạn có thể tạo ra 1 chương trình nhận diện các bức tường của mê cung và thoát khỏi sự bao vây.
	[image ./images/blocks/14-01.png]

	@ Chỉ rõ thứ tự xoay
	AsomeBot có thể tự tạo một chương trình có thể hoàn toàn thoát khỏi mê cung. Tuy nhiên, phương pháp này rất phức tạp để chúng tôi thực hiện. Nếu AsomeBot đi bộ như hình dưới đây, AsomeBot có thể thoát khỏi mê cung qua khoảng cách ngắn nhất. Hãy tìm hiểu cách AsomeBot di chuyển theo con đường này để thoát khỏi mê cung.
	[image ./images/blocks/14-02.png]

	@ Đoạn đơn giản được xoay bằng cảm ứng sóng âm
	Trong các khu vực được hiển thị trong hình, nếu AsomeBot gặp chướng ngại vật trong khi đang bước đi, nó có thể đi về phía lối ra miễn là được chỉ dẫn theo hướng rẽ.
	1. Nói về hướng AsomeBot nên rẽ theo từng vị trí.
	2. Nói về thời điểm AsomeBot nên rẽ ở khoảng cách giữa AsomeBot và chướng ngại vật.
	[image ./images/blocks/14-03.png]

	@ Tất cả các đoạn được xoay bởi cảm ứng siêu âm
	Khi AsomeBot gặp một bức tường, nó sẽ xoay theo hình ‘ㄷ’ . Nó đòi hỏi nhiều chuyển động và khó hơn là chỉ xoay theo một hướng. Nói về cách AsomeBot có thể di chuyển đến vị trí chính xác trong đoạn ④.
	[image ./images/blocks/14-04.png]

	@ Các đoạn cần phải được di chuyển theo các bước
	Phần này là nơi AsomeBot nên xoay theo hình ‘ㄷ’. Nó đòi hỏi nhiều chuyển động và khó hơn là chỉ xoay theo một hướng.
	1. Đo và nói về bao nhiêu bước được thực hiện để di chuyển đến từng đoạn.
	2. Nếu AsomeBot không thể di chuyển các đoạn chính xác chỉ bằng số bước, hãy nói về cách thoát khỏi mê cung.
	[image ./images/blocks/14-05.png]


3. Học về các khối sử dụng trong bài này
	@ Delay (nhóm [ADVANCE])
	Chờ mà không di chuyển trong vài giây nhất định.
	[block_image ./images/blocks/14-06.png
		delay(1)
	]
	Nhập số giây để chờ sau khi ấn.

	[html
		<div class="quiz_outline">
		<img src="../../common/images/quiz_veitnam.png">
		<p class="quiz_line"></p>
		<p class="main_text">Tạo một chương trình mà robot đi về phía trước 3 bước sau 5 giây khi chương trình chạy.</p>
		</div>
	]

	@ Attention (nhóm [BASIC])
	AsomeBot đứng nghiêm.
	[block_image ./images/blocks/14-07.png
		asomebot.home()
	]

	[html
		<div class="quiz_outline">
		<img src="../../common/images/quiz_veitnam.png">
		<p class="quiz_line"></p>
		<p class="main_text">Tạo một chương trình cho phép AsomeBot chờ 2 giây, tiến 3 bước và đứng nghiêm.</p>
		</div>
	]

	@ Set align (nhóm [BASIC])
	Bạn có thể điều chỉnh giá trị các góc của bốn động cơ được kết nối với AsomeBot. Góc thay đổi bằng cách điều chỉnh góc với khối “Set align” và thêm khối “Attention”, sau đó thực thi robot. Hãy đảm bảo rằng bạn ghi nhớ góc vì góc đã thay đổi sẽ được đặt lại nếu bị ngắt kết nối.
	[block_image ./images/blocks/14-08.png
		asomebot.align(90,90,90,90)
	]
	① Điều chỉnh góc của động cơ số 1. Động cơ về cơ bản được đặt ở 90 độ.
	② Điều chỉnh góc của động cơ số 2. Động cơ về cơ bản được đặt ở 90 độ.
	③ Điều chỉnh góc của động cơ số 3. Động cơ về cơ bản được đặt ở 90 độ.
	④ Điều chỉnh góc của động cơ số 4. Động cơ về cơ bản được đặt ở 90 độ.

	[html
		<div class="quiz_outline">
		<img src="../../common/images/quiz_veitnam.png">
		<p class="quiz_line"></p>
		<p class="main_text">Điều chỉnh góc của mỗi động cơ để đi thẳng về phía trước. Để thoát khỏi mê cung, robot phải có khả năng đi lại chính xác.</p>
		</div>
	]

	@ Đo khoảng cách (nhóm [SENSOR])
	Với cảm biến siêu âm, đo khoảng cách của chướng ngại vật phía trước. Giá trị của khoảng cách đo được lưu trữ trong một tên biến tên là ‘Cm’.
	[block_image ./images/blocks/14-09.png
		cm = hcsr04.get_distance()
	]

	@ lặp lại (nhóm [ADVANCE])
	Lặp lại các câu lệnh trong khối bao nhiêu lần mà bạn muốn.
	[block_image ./images/blocks/14-10.png
		for count in range(1):
		  pass
	]
	① Chỉ rõ số lần lặp lại.
	② Thêm các khối để lặp lại.

	@ Lặp lại vô tận (nhóm [ADVANCE])
	Chạy theo thứ tự các khối bên trong các khối.
	[block_image ./images/blocks/14-11.png
		while True:
		  pass
	]

	[html
		<div class="quiz_outline">
		<img src="../../common/images/quiz_veitnam.png">
		<p class="quiz_line"></p>
		<p class="main_text">Tạo một chương trình cho phép AsomeBot tiếp tục tiến về phía trước.</p>
		</div>
	]

	@ if (nhóm [ADVANCE])
	Thực thi khối bên trong khối khi điều kiện đầu vào là chính xác. Nếu điều kiện không chính xác, khối theo sau khối if sẽ được thực thi.
	[block_image ./images/blocks/14-12.png
		if i == :
	]
	① Nhập một biến được sử dụng trong câu lệnh điều kiện. Giá trị mặc định là 'i' và thay đổi thành 'cm' khi sử dụng cảm biến siêu âm. 
	② Chọn bất đẳng thức mặc định để so sánh các điều kiện.
	③ Nhập giá trị mặc định để sử dụng trong điều kiện. Bạn cần thêm các khối để xác định giá trị có điều kiện.
	④ Thêm các khối để được thực thi khi điều kiện đúng.

	@ Giá trị dữ liệu (nhóm [ADVANCE])
	Được sử dụng để xác định các giá trị dữ liệu như các biến hoặc số.
	[block_image ./images/blocks/14-13.png
		1
	]
	① Nhập giá trị mặc định để sử dụng trong điều kiện.

	[html
		<div class="quiz_outline">
		<img src="../../common/images/quiz_veitnam.png">
		<p class="quiz_line"></p>
		<p class="main_text">① Tạo chương trình mà robot lùi3 bước nếu giá trị khoảng cách nhỏ hơn 5cm khi đo bằng cảm biến siêu âm.</p>
		<div class="content_image_box"><img class="content_image" src="./images/blocks/14-14.png"></div>
		<p class="main_text">② Tạo một chương trình quay 3 lần sang trái và thoát khỏi câu lệnh lặp lại nếu AsomeBot tiếp tục tiến về phía trước và gặp một chướng ngại vật (một chướng ngại vật trong vòng 3 cm).</p>
		<div class="content_image_box"><img class="content_image" src="./images/blocks/14-15.png"></div>
		</div>
	]


4. Chơi trò chơi
	@ Luật chơi
	① Học sinh nào tạo ra một chương trình có thể thoát khỏi mê cung trong thời gian ngắn nhất sẽ thắng trò chơi.
	② Tạo một chương trình cho phép AsomeBot thoát khỏi mê cung bằng cách sử dụng một đường dẫn, như đường dẫn của hình ảnh hoặc bằng các phương pháp sáng tạo khác.
	[image ./images/blocks/14-16.png]

	@ Thuật toán
	① Đoạn màu đỏ. Khi AsomeBot gặp chướng ngại vật khi đi bộ, nó phải quay và di chuyển.
	② Đoạn màu xanh lá cây. Khi AsomeBot gặp chướng ngại vật, nó sẽ di chuyển theo hình ‘ㄷ’.
	③ Đoạn màu xanh. Di chuyển robot theo đúng số bước dựa trên đặc điểm của từng AsomeBot và xoay để thoát khỏi đoạn đó.
	[image ./images/blocks/14-17.png]

	@ Chơi trò chơi
	[image ./images/blocks/14-18.png]

	[html
		<script type="text/javascript">
			$(".video_button").css("display", "none");
		</script>
	]