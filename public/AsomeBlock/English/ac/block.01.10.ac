Let's Play ensemble together on an AsomeBot

1. Learning objectives
	[video ./video/block/01/10.execute.webm]
	* Play the music using an ultrasonic sensor.
	* Learn to play in an ensemble.


2. Preview
	@ Play music with ultrasonic sensor
	You can make AsomeBot musical instrument to make different sounds depending on distance measured with ultrasonic sensor.
	[image ./images/blocks/10-01.png]

	@ AsomeBot can play a ensemble or a troll
	You can play a ensemble or troll with some AsomeBots.
	Which song would you like to play a ensemble or troll together?
	[image ./images/blocks/10-02.png]


3. Learn which blocks to use
	@ Repeat infinity (ADVANCE Group)
	[Repeat infinitely] makes blocks that are bundled into it to continuously(endlessly) run in order.
	[block_image ./images/blocks/07-04.png
		while True:
		  pass
	]

	@ if (ADVANCE Group)
	[if] makes blocks that are bundled into it to run, when it corresponds with the condition.
	If it doesn't correspond with the condition, the blocks behind the [if] are run.
	[block_image ./images/blocks/07-05.png
	]
	① Input a variable to be used in the conditional statement. Adding sensor blocks to the default value ‘i’ will add the variable and can be selected.
	② Select the default inequality to compare the conditions.
	③ Input the default value to use in the condition. You need to add blocks to specify the conditional value.
	④ Add blocks to be executed when the condition is correct.

	@ if else (ADVANCE Group)
	If the content input as the condition is correct, the blocks following if will be executed; if incorrect, the blocks in the else will be executed.
	[block_image ./images/blocks/10-03.png
	]
	① Input a variable to be used in the conditional statement. Adding sensor blocks to the default value ‘i’ will add the variable and can be selected.
	② Select the inequality to compare the conditions.
	③ Input the default value to use in the condition. You need to add blocks to specify the conditional value.
	④ Add blocks to be executed when the condition is correct.
	⑤ Add blocks to be executed when conditions are incorrect.

	@ Measure distance (SENSOR Group)
	With an ultrasonic sensor, measure the distance of the obstacle in front. The value of the measured distance is stored in a variable name ‘Cm’.
	[block_image ./images/blocks/07-03.png
		cm = hcsr04.get_distance()
	]

	@ Buzzer on (SOUND Group)
	Make the buzzer unable to use. To make sound with the buzzer, you must use this block. Note that if the block is not used first, you cannot use the block.
	[block_image ./images/blocks/09-05.png
		turnoff_pins( (1, 5, 6, 7, 8) )
		import music
		music.open(1)
	]

	@ Buzzer off (SOUND Group)
	This allows you to use other parts again after using the buzzer. You cannot use other parts while using the buzzer.
	[block_image ./images/blocks/09-06.png
		turnoff_pins( (1, 5, 6, 7, 8) )
		import asomebot
		asomebot.ready(5, 6, 7, 8)
	]

	@ Make sound (SOUND Group)
	Using this block, you can make the sound you want using the frequency.
	[block_image ./images/blocks/09-07.png
		music.tone(0)
		delay(1)
		music.mute()
	]
	① Input the frequency of the sound you want.
	② Specify the time to make the sound.

	@ Play for (SOUND Group)
	You can make sound you want by frequency with this block.
	[block_image ./images/blocks/09-08.png
		music.note("C1",1*1000)
	]
	① Select the note you want play.
	② Select the octave.
	③ Enter the playing-time

	[html
		<div class="quiz_outline">
		<img src="../../common/images/quiz_eng.png">
		<p class="quiz_line"></p>
		<p class="main_text">① Make AsomeBot to differently act according to distance measured with ultrasonic sensor.<br>
		• If distance with obstacle is equal to or less than 5cm, AsomeBot move backward 2 steps<br>
		• If distance with obstacle is equal to or less than 10cm, AsomeBot acts Flap 3 times and stands at attention<br>
		• If distance with obstacle is equal to or less than 15cm, AsomeBot dances moonwalk<br>
		② Make AsomeBot to make different sounds according to distance ultrasonic sensor measured.<br>
		• At 10cm or below, play Do~Si of the 3-octaves for one second respectively<br>
		• At 20cm or below, play the tone of reducing frequency from 300 by 50 for one second.
		</p>
		</div>
	]


4. Play activity
	@ Game rules
	① Play ensemble with 3-5 robots as a group. 
	② Set the music to play by group.
	③ Note that the music should not be too difficult to play together.

	@ Algorithm
	You should first determine the distance corresponding to each note to make different sounds depending on the distance measured by the ultrasonic sensor.
	[image ./images/blocks/10-05.png]

	@ Play game
	[image ./images/blocks/10-04.jpg]
	
	[html
		<script type="text/javascript">
			$(".video_button").css("display", "none");
		</script>
	]