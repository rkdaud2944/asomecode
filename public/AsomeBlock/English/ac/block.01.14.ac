Maze escaping

1. Learning objectives
	[video ./video/block/01/14.execute.webm]
	* Understand the algorithm that escapes the maze.
	* Control the movement of AsomeBot in various situations.
	* Understand the characteristics of each section of the maze and develop escape methods


2. Preview
	@ Maze escaping
	Using AsomeBot's ultrasonic sensors, you can create a program that recognizes the walls of the maze and escapes from the blockages.
	[image ./images/blocks/14-01.png]

	@ Specifying the order of rotation
	AsomeBot can create a program that can completely escape from a maze by itself. However, this method is very complicated for us to make. If AsomeBot walks as shown, AsomeBot can escape the maze through the shortest distance. Let's find out how AsomeBot should move along this path to escape the maze.
	[image ./images/blocks/14-02.png]

	@ Simple section rotated by ultrasonic sensor
	In the areas shown in the Fig, if AsomeBot encounters an obstacle while walking any number of steps, it can walk toward the exit as long as it is instructed with the direction to turn. 
	1. Talk about in which direction AsomeBot should turn in each position.
	2. Talk about when AsomeBot should make turn at what distance between the AsomeBot and obstacle.
	[image ./images/blocks/14-03.png]

	@ All sections rotated by ultrasonic sensor
	When AsomeBot encounters a wall, it should rotate in a ‘ㄷ’ shape. It requires more motions and harder than just rotating in one direction. Talk about how AsomeBot can move to the correct position in section ④.
	[image ./images/blocks/14-04.png]

	@ Sections that need to be moved by steps
	This section is where AsomeBot should rotate in a ‘ㄷ’ shape. It requires more motions and harder than just rotating in one direction.
	1. Measure and talk about how many steps are taken to move to each section.
	2. If AsomeBot cannot move sections exactly only by number of steps, talk about how to escape the maze.
	[image ./images/blocks/14-05.png]


3. learn which blocks to use
	@ Delay ([ADVANCE] Group)
	Wait without moving for the specified seconds.
	[block_image ./images/blocks/14-06.png
		delay(1)
	]
	Input the number of seconds to wait after a click.

	[html
		<div class="quiz_outline">
		<img src="../../common/images/quiz_eng.png">
		<p class="quiz_line"></p>
		<p class="main_text">Create a program that walks 3 steps forward after 5 seconds when the program runs.</p>
		</div>
	]

	@ Attention ([BASIC] Group)
	AsomeBot takes stand at attention.
	[block_image ./images/blocks/14-07.png
		asomebot.home()
	]

	[html
		<div class="quiz_outline">
		<img src="../../common/images/quiz_eng.png">
		<p class="quiz_line"></p>
		<p class="main_text">Create a program that let’s AsomeBot to wait 2 seconds, forward 3 steps and stand at attention.</p>
		</div>
	]

	@ Set align ([BASIC] Group)
	You may adjust the value of the angles of the four motors connected to AsomeBot. The angle changes by adjusting the angle with the Set align block and adding the Attention block, and then execute the robot. Make sure to remember the angle as the changed angle will be reset if disconnected.
	[block_image ./images/blocks/14-08.png
		asomebot.align(90,90,90,90)
	]
	① Adjust the angle of No.1 motor. The motor is basically set at 90 degrees.
	② Adjust the angle of No.2 motor. The motor is basically set at 90 degrees.
	③ Adjust the angle of No.3 motor. The motor is basically set at 90 degrees.
	④ Adjust the angle of No.4 motor. The motor is basically set at 90 degrees.

	[html
		<div class="quiz_outline">
		<img src="../../common/images/quiz_eng.png">
		<p class="quiz_line"></p>
		<p class="main_text">Adjust the angle of each motor to walk straight ahead. To escape the maze, the robot must be able to walk correctly.</p>
		</div>
	]

	@ Measure distance ([SENSOR] Group)
	With an ultrasonic sensor, measure the distance of the obstacle in front. The value of the measured distance is stored in a variable name ‘Cm’.
	[block_image ./images/blocks/14-09.png
		cm = hcsr04.get_distance()
	]

	@ Repeat ([ADVANCE] Group)
	Repeat the commands in the block as many times as you want.
	[block_image ./images/blocks/14-10.png
		for count in range(1):
		  pass
	]
	① Specify the number of times to repeat.
	② Add blocks to repeat.

	@ Repeat infinitely ([ADVANCE] Group)
	Run blocks inside blocks to run in order.
	[block_image ./images/blocks/14-11.png
		while True:
		  pass
	]

	[html
		<div class="quiz_outline">
		<img src="../../common/images/quiz_eng.png">
		<p class="quiz_line"></p>
		<p class="main_text">Create a program that lets AsomeBot to keep walking forward.</p>
		</div>
	]

	@ if ([ADVANCE] Group)
	Execute the block in the block when the detail input as condition is correct. If the condition is incorrect, the block following the if block will be executed.
	[block_image ./images/blocks/14-12.png
		if i == :
	]
	① Input a variable to be used in the conditional statement. The default value is 'i' and changes to 'cm' when using an ultrasonic sensor. 
	② Select the default inequality to compare the conditions.
	③ Input the default value to use in the condition. You need to add blocks to specify the conditional value.
	④ Add blocks to be executed when the condition is correct.

	@ Data Value ([ADVANCE] Group)
	Used to specify data values such as variables or numbers.
	[block_image ./images/blocks/14-13.png
		1
	]
	① Input the default value to use in the condition.

	@ Break ([ADVANCE] Group)
	When you meet the block during the Infinite loop program, stops the infinite loop and execute the following code. 
	[block_image ./images/blocks/14-19.png
		break;
	]

	[html
		<div class="quiz_outline">
		<img src="../../common/images/quiz_eng.png">
		<p class="quiz_line"></p>
		<p class="main_text">① Create a program that backwards 3 steps if the distance value measured by the ultrasonic sensor is less than 5cm.</p>
		<div class="content_image_box"><img class="content_image" src="./images/blocks/14-14.png"></div>
		<p class="main_text">② Create a program that turns 3 times to the left and escape the repeat statement if AsomeBot keeps walking forward and encounters an obstacle (an obstacle within 3 cm).</p>
		<div class="content_image_box"><img class="content_image" src="./images/blocks/14-15.png"></div>
		</div>
	]


4. Play Activity
	@ Game Rule
	① A student who created a program that can escape the maze in the shortest time wins the game.
	② Create a program that lets AsomeBot to escape the maze by using a path, like the path of the image or by using other creative methods.
	[image ./images/blocks/14-16.png]

	@ Algorithm
	① Red section. When AsomeBot encounters an obstacle while walking, it must turn and move.
	② Green section. When AsomeBot encounters an obstacle, it should move in the shape of ‘ㄷ’.
	③ Blue section. Move robots in the correct number of steps according to the characteristics of each AsomeBot and rotate to escape the section.
	[image ./images/blocks/14-17.png]

	@ Play game
	[image ./images/blocks/14-18.png]

	[html
		<script type="text/javascript">
			$(".video_button").css("display", "none");
		</script>
	]